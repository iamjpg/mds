import{r as t,c as s,h as e,H as i,g as a}from"./p-1ebddf58.js";const n=class{constructor(e){t(this,e),this.mxChange=s(this,"mxChange",7),this.fill=!1,this.value=null}onKeyUp(t){"Enter"!==t.key&&" "!==t.key||this.animateIndicator(t)}onMouseUp(t){this.animateIndicator(t)}onClick(t){const s=t.target.closest("mx-tab");if(!s)return;const e=this.element.querySelectorAll("mx-tab"),i=Array.prototype.indexOf.call(e,s);i>=0&&this.mxChange.emit(i)}onValueChange(){this.animateIndicator(null,this.value),this.setSelectedTab()}connectedCallback(){null!==this.value&&this.setSelectedTab()}setSelectedTab(){this.element.querySelectorAll("mx-tab").forEach(((t,s)=>{t.selected=s===this.value}))}animateIndicator(t,s){if(null!==this.value&&this.value===s)return;const e=this.element.querySelector("mx-tab[selected]");let i;if(t?i=t.target.closest("mx-tab"):s>=0&&(i=this.element.querySelectorAll("mx-tab")[s]),!e||!i||"MX-TAB"!==i.tagName)return;const a=e.offsetLeft-i.offsetLeft,n=i.querySelector(".active-tab-indicator");n&&(n.style.transform=`translateX(${a}px)`,n.style.transition="none",setTimeout((()=>{n.style.transform="translateX(0)",n.style.transition="transform 0.25s cubic-bezier(0.4, 0, 0.2, 1)"}),0))}get gridClass(){let t=this.fill?"grid":"inline-grid";return t+=" grid-flow-col auto-cols-fr",t}render(){return e(i,{class:"mx-tabs relative block",role:"tablist"},e("div",{class:this.gridClass},e("slot",null)))}get element(){return a(this)}static get watchers(){return{value:["onValueChange"]}}};export{n as mx_tabs}