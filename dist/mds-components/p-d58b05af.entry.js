import{r as t,c as s,h as i,H as e,g as n}from"./p-8f974c5e.js";const r={sm:"640px",md:"720px",lg:"1024px",xl:"1280px","2xl":"1536px"};class c{constructor(){this.sm=!1,this.md=!1,this.lg=!1,this.xl=!1,this["2xl"]=!1}}const h=new class{constructor(){this.componentRefs=[],this.minWidths=new c,this.listeners=new Map}subscribeComponent(t){0===this.componentRefs.length&&this.addListeners(),this.componentRefs.push(t),t.minWidths=Object.assign({},this.minWidths)}addListeners(){Object.keys(r).forEach((t=>{const s=window.matchMedia(`(min-width: ${r[t]})`),i=s=>{this.minWidths[t]=s.matches,this.componentRefs.forEach((t=>{t.minWidths=Object.assign({},this.minWidths)}))};i(s),s.addListener(i),this.listeners.set(s,i)}))}unsubscribeComponent(t){this.componentRefs=this.componentRefs.filter((s=>s!==t)),0===this.componentRefs.length&&this.removeListeners()}removeListeners(){this.listeners.forEach(((t,s)=>{s.removeListener(t)}))}},a=class{constructor(i){t(this,i),this.mxChange=s(this,"mxChange",7),this.fill=!1,this.value=null,this.minWidths=new c}connectedCallback(){h.subscribeComponent(this)}animateIndicator(t,s){if(function(){const t=window.matchMedia("(prefers-reduced-motion: reduce)");return!t||t.matches}())return;if(null==t||null==s)return;const i=this.element.querySelectorAll(".mx-tab"),e=i[s],n=i[t];if(!e||!n)return;const r=e.offsetLeft-n.offsetLeft,c=n.querySelector(".active-tab-indicator");c&&(c.style.transform=`translateX(${r}px)`,c.style.transition="none",setTimeout((()=>{c.style.transform="translateX(0)",c.style.transition="transform 0.25s cubic-bezier(0.4, 0, 0.2, 1)"}),0))}disconnectedCallback(){h.unsubscribeComponent(this)}onClick(t){const s=t.target.closest(".mx-tab");if(!s)return;const i=this.element.querySelectorAll(".mx-tab"),e=Array.prototype.indexOf.call(i,s);e>=0&&this.mxChange.emit(e)}onInput(t){this.mxChange.emit(+t.target.value)}get renderAsSelect(){return!this.minWidths.md&&this.tabs.length>2}get gridClass(){let t=this.fill?"grid":"inline-grid";return t+=" grid-flow-col auto-cols-fr",t}render(){return i(e,{class:"mx-tabs relative block",role:"tablist"},this.renderAsSelect?i("mx-select",{value:this.value,onInput:this.onInput.bind(this)},this.tabs.map(((t,s)=>i("option",{value:s},t.label||t.ariaLabel)))):this.tabs&&i("div",{class:this.gridClass},this.tabs.map(((t,s)=>i("mx-tab",Object.assign({selected:this.value===s},t))))))}get element(){return n(this)}static get watchers(){return{value:["animateIndicator"]}}};export{a as mx_tabs}