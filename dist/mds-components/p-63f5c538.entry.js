import{r as t,c as s,h as e,H as i,g as r}from"./p-3fc6e8e8.js";import{q as a}from"./p-0d6b3f5b.js";import{M as n,m as c}from"./p-8a252c56.js";const l=class{constructor(e){t(this,e),this.mxChange=s(this,"mxChange",7),this.fill=!1,this.value=null,this.minWidths=new n}connectedCallback(){c.subscribeComponent(this)}animateIndicator(t,s){if(a())return;if(null==t||null==s)return;const e=this.element.querySelectorAll(".mx-tab"),i=e[s],r=e[t];if(!i||!r)return;const n=i.offsetLeft-r.offsetLeft,c=r.querySelector(".active-tab-indicator");c&&(c.style.transform=`translateX(${n}px)`,c.style.transition="none",setTimeout((()=>{c.style.transform="translateX(0)",c.style.transition="transform 0.25s cubic-bezier(0.4, 0, 0.2, 1)"}),0))}disconnectedCallback(){c.unsubscribeComponent(this)}onClick(t){const s=t.target.closest(".mx-tab");if(!s)return;const e=this.element.querySelectorAll(".mx-tab"),i=Array.prototype.indexOf.call(e,s);i>=0&&this.mxChange.emit(i)}onInput(t){this.mxChange.emit(+t.target.value)}get renderAsSelect(){return!this.minWidths.md&&this.tabs&&this.tabs.length>2}get gridClass(){let t=this.fill?"grid":"inline-grid";return t+=" grid-flow-col auto-cols-fr",t}render(){return e(i,{class:"mx-tabs relative block",role:"tablist"},this.renderAsSelect?e("mx-select",{value:this.value,onInput:this.onInput.bind(this),dense:!0},this.tabs.map(((t,s)=>e("option",{value:s},t.label||t.ariaLabel)))):this.tabs&&e("div",{class:this.gridClass},this.tabs.map(((t,s)=>e("mx-tab",Object.assign({selected:this.value===s},t))))))}get element(){return r(this)}static get watchers(){return{value:["animateIndicator"]}}};export{l as mx_tabs}